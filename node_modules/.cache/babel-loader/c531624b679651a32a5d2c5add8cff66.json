{"ast":null,"code":"var _jsxFileName = \"/Users/sangiljung/Desktop/Westcliff/WEB 603/W6/W6_D2/m6-w2-d2-demo/src/features/header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { todoAdded } from '../todos/todosSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n  const handleChange = e => setText(e.target.value);\n  const handleKeyDown = e => {\n    const trimmedText = text.trim();\n    // If the user pressed the Enter key:\n    if (e.key === 'Enter' && trimmedText) {\n      // Create the thunk function with the text the user wrote\n      dispatch(todoAdded(trimmedText));\n      // And clear out the text input\n      setText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"new-todo\",\n      placeholder: \"What needs to be done?\",\n      value: text,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"Bq1vLXv4zQXPT4H4pz97m9pI+fU=\", false, function () {\n  return [useDispatch];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","todoAdded","jsxDEV","_jsxDEV","Header","_s","text","setText","dispatch","handleChange","e","target","value","handleKeyDown","trimmedText","trim","key","className","children","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sangiljung/Desktop/Westcliff/WEB 603/W6/W6_D2/m6-w2-d2-demo/src/features/header/Header.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { todoAdded } from '../todos/todosSlice';\n\nconst Header = () => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => setText(e.target.value);\n\n  const handleKeyDown = (e) => {\n    const trimmedText = text.trim();\n    // If the user pressed the Enter key:\n    if (e.key === 'Enter' && trimmedText) {\n      // Create the thunk function with the text the user wrote\n      dispatch(todoAdded(trimmedText));\n      // And clear out the text input\n      setText('');\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </header>\n  );\n};\n\nexport default Header; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAIC,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAEnD,MAAMC,aAAa,GAAIH,CAAC,IAAK;IAC3B,MAAMI,WAAW,GAAGR,IAAI,CAACS,IAAI,CAAC,CAAC;IAC/B;IACA,IAAIL,CAAC,CAACM,GAAG,KAAK,OAAO,IAAIF,WAAW,EAAE;MACpC;MACAN,QAAQ,CAACP,SAAS,CAACa,WAAW,CAAC,CAAC;MAChC;MACAP,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,oBACEJ,OAAA;IAAQc,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACxBf,OAAA;MACEc,SAAS,EAAC,UAAU;MACpBE,WAAW,EAAC,wBAAwB;MACpCP,KAAK,EAAEN,IAAK;MACZc,QAAQ,EAAEX,YAAa;MACvBY,SAAS,EAAER;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACpB,EAAA,CA5BID,MAAM;EAAA,QAEOJ,WAAW;AAAA;AAAA0B,EAAA,GAFxBtB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}