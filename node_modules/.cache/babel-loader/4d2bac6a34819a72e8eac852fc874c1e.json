{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  status: 'all',\n  // 'all' | 'active' | 'completed'\n  colors: [] // ['green', 'blue', 'orange', 'purple', 'red']\n};\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    statusFilterChanged(state, action) {\n      state.status = action.payload;\n    },\n    colorFilterChanged(state, action) {\n      const {\n        color,\n        changeType\n      } = action.payload;\n      switch (changeType) {\n        case 'added':\n          {\n            if (!state.colors.includes(color)) {\n              state.colors.push(color);\n            }\n            break;\n          }\n        case 'removed':\n          {\n            state.colors = state.colors.filter(existingColor => existingColor !== color);\n            break;\n          }\n        default:\n          return;\n      }\n    }\n  }\n});\nexport const {\n  statusFilterChanged,\n  colorFilterChanged\n} = filtersSlice.actions;\nexport const selectStatus = state => state.filters.status;\nexport const selectColors = state => state.filters.colors;\nexport default filtersSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","status","colors","filtersSlice","name","reducers","statusFilterChanged","state","action","payload","colorFilterChanged","color","changeType","includes","push","filter","existingColor","actions","selectStatus","filters","selectColors","reducer"],"sources":["/Users/sangiljung/Desktop/Westcliff/WEB 603/W6/W6_D2/m6-w2-d2-demo/src/features/filters/filtersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  status: 'all', // 'all' | 'active' | 'completed'\n  colors: [], // ['green', 'blue', 'orange', 'purple', 'red']\n};\n\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    statusFilterChanged(state, action) {\n      state.status = action.payload;\n    },\n    colorFilterChanged(state, action) {\n      const { color, changeType } = action.payload;\n      switch (changeType) {\n        case 'added': {\n          if (!state.colors.includes(color)) {\n            state.colors.push(color);\n          }\n          break;\n        }\n        case 'removed': {\n          state.colors = state.colors.filter(\n            (existingColor) => existingColor !== color\n          );\n          break;\n        }\n        default:\n          return;\n      }\n    },\n  },\n});\n\nexport const { statusFilterChanged, colorFilterChanged } = filtersSlice.actions;\n\nexport const selectStatus = (state) => state.filters.status;\nexport const selectColors = (state) => state.filters.colors;\n\nexport default filtersSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,KAAK;EAAE;EACfC,MAAM,EAAE,EAAE,CAAE;AACd,CAAC;AAED,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,mBAAmBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjCD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,kBAAkBA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAM;QAAEG,KAAK;QAAEC;MAAW,CAAC,GAAGJ,MAAM,CAACC,OAAO;MAC5C,QAAQG,UAAU;QAChB,KAAK,OAAO;UAAE;YACZ,IAAI,CAACL,KAAK,CAACL,MAAM,CAACW,QAAQ,CAACF,KAAK,CAAC,EAAE;cACjCJ,KAAK,CAACL,MAAM,CAACY,IAAI,CAACH,KAAK,CAAC;YAC1B;YACA;UACF;QACA,KAAK,SAAS;UAAE;YACdJ,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,CAACa,MAAM,CAC/BC,aAAa,IAAKA,aAAa,KAAKL,KACvC,CAAC;YACD;UACF;QACA;UACE;MACJ;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,mBAAmB;EAAEI;AAAmB,CAAC,GAAGP,YAAY,CAACc,OAAO;AAE/E,OAAO,MAAMC,YAAY,GAAIX,KAAK,IAAKA,KAAK,CAACY,OAAO,CAAClB,MAAM;AAC3D,OAAO,MAAMmB,YAAY,GAAIb,KAAK,IAAKA,KAAK,CAACY,OAAO,CAACjB,MAAM;AAE3D,eAAeC,YAAY,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}